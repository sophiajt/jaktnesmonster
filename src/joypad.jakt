class Joypad {
    public up: bool
    public down: bool
    public left: bool
    public right: bool
    public start: bool
    public select: bool
    public a: bool
    public b: bool

    public data: u8

    public fn init() throws -> Joypad {
        return Joypad(up: false, down: false, left: false, right: false, start: false, select: false, a: false, b: false, data: 0)
    }

    public fn poll_joypad(mut this) {
        // 0 - A
        // 1 - B
        // 2 - Select
        // 3 - Start
        // 4 - Up
        // 5 - Down
        // 6 - Left
        // 7 - Right

        .data = 0
        if .a {
            .data |= 0x1
        }
        if .b {
            .data |= 0x2
        }
        if .select {
            .data |= 0x4
        }
        if .start {
            .data |= 0x8
        }
        if .up {
            .data |= 0x10
        }
        if .down {
            .data |= 0x20
        }
        if .left {
            .data |= 0x40
        }
        if .right {
            .data |= 0x80
        }
    }

    public fn read_joypad(mut this) -> u8 {
        let output = .data & 0x1
        .data >>= 1
        return output
    }

    public fn press_up(mut this) {
        .up = true
        .down = false
    }

    public fn press_down(mut this) {
        .up = false
        .down = true
    }

    public fn press_left(mut this) {
        .left = true
        .right = false
    }

    public fn press_right(mut this) {
        .left = false
        .right = true
    }

    public fn press_start(mut this) {
        .start = true
    }

    public fn press_select(mut this) {
        .select = true
    }

    public fn press_a(mut this) {
        .a = true
    }

    public fn press_b(mut this) {
        .b = true
    }

    public fn release_up(mut this) {
        .up = false
    }

    public fn release_down(mut this) {
        .down = false
    }

    public fn release_left(mut this) {
        .left = false
    }

    public fn release_right(mut this) {
        .right = false
    }

    public fn release_start(mut this) {
        .start = false
    }

    public fn release_select(mut this) {
        .select = false
    }

    public fn release_a(mut this) {
        .a = false
    }

    public fn release_b(mut this) {
        .b = false
    }

    public fn dump(this) {
        println("up: {} down: {} left: {} right: {} start: {} select: {} a: {} b: {}", .up, .down, .left, .right, .start, .select, .a, .b)
    }
}